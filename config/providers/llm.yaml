########################
# LLM service provider
########################

# Registered LLMs Services

# LLM_id should follow Python variables constraints - ie no '-' no space etc
# Use pattern {self.model_family_name}_{version}
# model_name is provider specific.  It can contains several fields decoded in the factory.

# Capabilities can be : 'reasonning', 'structured_outputs', 'pdf', 'vision'
# !!! THE ONE HERE ARE INCOMPLETE, AND POSSIBLY INCORRECT !!!! 

# Provider documentation links:
# OpenAI: https://platform.openai.com/docs/models
# DeepInfra: https://deepinfra.com/models
# Groq: https://console.groq.com/docs/models
# Together: https://docs.together.ai/docs/inference-models
# Google/Vertex AI: https://cloud.google.com/vertex-ai/docs/generative-ai/model-reference/text
# Ollama: https://ollama.ai/library
# EdenAI: :https//app.edenai.run/v2/feat/generative/chat ; https://app.edenai.run/bricks/text/chat  
# Azure OpenAI: https://learn.microsoft.com/en-us/azure/ai-services/openai/concepts/models
# OpenRouter: https://openrouter.ai/docs#models
# Amazon : https://docs.aws.amazon.com/bedrock/latest/userguide/models-supported.html
# DeepSeek: https://api-docs.deepseek.com/quick_start/pricing 
# HuggingFace: https://huggingface.co/models
# ...

#cSpell: disable

llm:
- model:
  id: claude_haiku35
  providers:
    - edenai: anthropic/claude-3-5-haiku-latest
    - openrouter: anthropic/claude-3-5-haiku
  capabilities: ['structured_outputs']

- model:
  id: claude_sonnet
  providers:
    - edenai: anthropic/anthropic/claude-sonnet-4-20251514
    - openrouter: anthropic/claude-sonnet-4
  capabilities: ['structured_outputs', 'pdf', 'vision']

- model:
  id: deepseek_v31
  providers:
    - deepseek: deepseek-chat
    - openrouter: deepseek/deepseek-chat-v3.1
    - edenai: deepseek/deepseek-chat
  capabilities: ['structured_outputs']

- model:
  id: deepseek_R1
  providers:
    - deepseek: deepseek-reasoner
    - edenai: deepseek/deepseek-reasoner
  capabilities: ['reasonning', 'structured_outputs']

- model:  # fake model for tests
  id: parrot_local
  providers:
    - fake: parrot

- model:
  id: falcon3_3
  providers:
    - ollama: falcon3
  capabilities: ['structured_outputs']

- model:
  id: gemini_pro
  providers:
    - google: gemini-pro
  capabilities: ['structured_outputs']

- model:
  id: gemma3_4b
  providers:
    - ollama: gemma3:4b
  capabilities: ['structured_outputs', 'vision']

- model:
  id: google_gemini15flash
  providers:
    - edenai: google/gemini-1.5-flash
    - openrouter: google/gemini-flash-1.5
  capabilities: ['vision', 'structured_outputs']

- model:
  id: qwen31_17
  providers:
    - ollama: qwen3:1.7b
  capabilities: ['structured_outputs']

- model:
  id: google_gemini15pro
  providers:
    - openrouter: google/gemini-pro-1.5
  capabilities: ['vision', 'structured_outputs']

- model:
  id: gpt_41mini
  providers:
    - openrouter: openai/gpt-4.1-mini
    - edenai: gpt-4.1-mini-2025-04-14
    - openai: gpt-4.1-mini-2025-04-14
  capabilities: ['structured_outputs']

- model:
  id: gpt_41
  providers:
    - openrouter: openai/gpt-4.1
    - edenai: gpt-4.1-2025-04-14
    - azure: gpt-4.1/2024-02-15-preview
  capabilities: ['structured_outputs', 'vision']

- model:
  id: gpt_4o
  providers:
    - openai: gpt-4o
    - edenai: openai/gpt-4o
    - azure: gpt-4o/2024-02-15-preview
  capabilities: ['vision', 'structured_outputs']

- model:
  id: gpt_4omini
  providers:
    - openai: gpt-4o-mini
    - edenai: openai/gpt-4o-mini
  capabilities: ['structured_outputs']

- model:
  id: gpt_o3mini
  providers:
    - openrouter: openai/o3-mini
  capabilities: ['structured_outputs', 'reasoning']

- model:
  id: gpt_oss120
  providers:
    - openrouter: openai/gpt-oss-120b
  capabilities: ['structured_outputs']

- model:
  id: liquid_lfm40
  providers:
    - openrouter: liquid/lfm-40b
    - vllm:  # DEV ! NOT TESTED !
        model: "bla bla vla"
        trust_remote_code: True
        max_new_tokens: 512
        llm_kwargs:
          quantization: awq
  capabilities: ['structured_outputs']


- model:
  id: llama32_90V
  providers:
    - deepinfra: meta-llama/Llama-3.2-90B-Vision-Instruct
    - openrouter: meta-llama/llama-3.2-90b-vision-instruct
  capabilities: ['vision', 'structured_outputs']

- model:
  id: llama33_70
  providers:
    - deepinfra: meta-llama/Llama-3.3-70B-Instruct
    - groq: llama-3.3-70b-versatile
    - openrouter: meta-llama/llama-3.3-70b-instruct
    - edenai: together_ai/meta-llama/Llama-3.3-70B-Instruct-Turbo
  capabilities: ['structured_outputs']

- model:
  id: llava_phi3
  providers:
    - ollama: llava-phi3
  capabilities: ['vision', 'structured_outputs']

- model:
  id: mistral_large
  providers:
    - edenai: mistral/mistral-large-latest
    - openrouter: mistralai/mistral-large-2411
  capabilities: ['structured_outputs']

- model:
  id: mistral_medium31
  providers:
    - mistral: mistral-medium-latest
    - openrouter: mistralai/mistral-medium-3.1
  capabilities: ['structured_outputs', 'vision']

- model:
  id: mistral_nemo
  providers:
    - openrouter: mistralai/mistral-nemo
  capabilities: ['structured_outputs']

- model:
  id: mistral_small
  providers:
    - edenai: mistral/mistral-small-latest
  capabilities: ['structured_outputs']

- model:
  id: mixtral_7x8
  providers:
    - deepinfra: mistralai/Mixtral-8x7B-Instruct-v0.1
    - groq: Mixtral-8x7b-32768
  capabilities: ['structured_outputs']

- model:
  id: kimi_k2
  providers:
    - openrouter: moonshotai/kimi-k2
    - groq: moonshotai/kimi-k2-instruct
  capabilities: ['structured_outputs']  

- model:
  id: nova_lite10
  providers:
    - openrouter: amazon/nova-lite-v1
  capabilities: ['structured_outputs']

- model:
  id: nova_pro10
  providers:
    - openrouter: amazon/nova-pro-v1
  capabilities: ['structured_outputs']

- model:
  id: nvidia_nemotrom70
  providers:
    - deepinfra: nvidia/Llama-3.1-Nemotron-70B-Instruct
    - openrouter: nvidia/llama-3.1-nemotron-70b-instruct
  capabilities: ['structured_outputs']

- model:
  id: qwen25_coder32
  providers:
    - openrouter: qwen/qwen-2.5-coder-32b-instruct
  capabilities: ['structured_outputs']

- model:
  id: qwen2_70
  providers:
    - deepinfra: Qwen/Qwen2-72B-Instruct
  capabilities: ['structured_outputs']

- model:
  id: qwen2_vl72
  providers:
    - openrouter: qwen/qwen-2-vl-72b-instruct
  capabilities: ['vision', 'structured_outputs']

- model:
  id: qwen_qwq32
  providers:
    - deepinfra: Qwen/QwQ-32B
    - openrouter: qwen/qwq-32b
  capabilities: ['structured_outputs']

- model:
  id: sonar_reasoning
  providers:
    - openrouter: perplexity/sonar-reasoning
  capabilities: ['reasonning', 'structured_outputs']

- model:
  id: wizard2_8x22
  providers:
    - deepinfra: microsoft/WizardLM-2-8x22B
  capabilities: ['structured_outputs']

- model:
  id: zephyr_7b
  providers:
    - huggingface: HuggingFaceH4/zephyr-7b-beta
  capabilities: ['structured_outputs']

